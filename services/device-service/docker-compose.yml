version: '3.8'

services:
  device-service:
    build: .
    container_name: device-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/fleet_management
      - SPRING_DATASOURCE_USERNAME=fleet_user
      - SPRING_DATASOURCE_PASSWORD=fleet_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - TRACCAR_API_URL=http://traccar:8082/api
      - TRACCAR_USERNAME=admin
      - TRACCAR_PASSWORD=admin
    depends_on:
      - postgres
      - redis
      - kafka
      - eureka-server
    networks:
      - fleet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: device-postgres
    environment:
      - POSTGRES_DB=fleet_management
      - POSTGRES_USER=fleet_user
      - POSTGRES_PASSWORD=fleet_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - fleet-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: device-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - fleet-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: device-kafka
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093,PLAINTEXT_INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    networks:
      - fleet-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: device-zookeeper
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - fleet-network
    restart: unless-stopped

  eureka-server:
    image: eureka-server:latest
    container_name: device-eureka-server
    ports:
      - "8762:8761"
    networks:
      - fleet-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  fleet-network:
    external: true

