spring:
  application:
    name: bridge-service

  profiles:
    active: dev

  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      retries: 3
      batch-size: 16384
      linger-ms: 10
      buffer-memory: 33554432
      enable-idempotence: true

  # Redis Configuration
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    jedis:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 2
        max-wait: 1000ms

  # Jackson Configuration
  jackson:
    time-zone: UTC
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
    serialization:
      write-dates-as-timestamps: false

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

# Server Configuration
server:
  port: 8090
  servlet:
    context-path: /bridge

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env
  endpoint:
    health:
      show-details: always
  health:
    redis:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Bridge Service Specific Configuration
bridge:
  # Traccar Configuration
  traccar:
    base-url: ${TRACCAR_API_URL:http://localhost:8082}
    username: ${TRACCAR_USERNAME:admin}
    password: ${TRACCAR_PASSWORD:admin}
    timeout: 30s
    max-retries: 3
    retry-delay: 1s

  # Sync Configuration
  sync:
    position-interval: 5s
    health-interval: 30s
    event-interval: 10s
    batch-size: 50
    max-parallel: 10
    enabled: true

  # Kafka Topics
  kafka:
    topics:
      location-updates: device.location.updated
      sensor-readings: device.sensor.reading
      device-heartbeat: device.heartbeat
      command-results: device.command.result
      geofence-events: device.geofence.event
      alert-events: device.alert.triggered

  # Cache Configuration
  cache:
    device-ttl: 300s
    position-ttl: 60s
    health-ttl: 120s
    duplicate-check-ttl: 30s

  # Retry Configuration
  retry:
    max-attempts: 3
    backoff-delay: 1s
    max-delay: 30s
    exponential-multiplier: 2

# Resilience4j Configuration
resilience4j:
  retry:
    instances:
      traccarApi:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException

  circuitbreaker:
    instances:
      traccarApi:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5

# Logging Configuration
logging:
  level:
    com.fleetmanagement.bridgeservice: DEBUG
    org.springframework.kafka: INFO
    org.springframework.web.reactive: INFO
    io.github.resilience4j: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/bridge-service.log
    max-size: 10MB
    max-history: 30

---

# ===== application-dev.yml =====
spring:
  config:
    activate:
      on-profile: dev

  # Development Kafka
  kafka:
    bootstrap-servers: localhost:9092

  # Development Redis
  redis:
    host: localhost
    port: 6379
    password: ""

# Development Traccar
bridge:
  traccar:
    base-url: http://localhost:8082
    username: admin
    password: admin

  sync:
    enabled: true
    position-interval: 10s  # Slower in dev

  cache:
    device-ttl: 600s  # Longer TTL in dev

# Development Logging
logging:
  level:
    root: INFO
    com.fleetmanagement.bridgeservice: DEBUG

---

# ===== application-prod.yml =====
spring:
  config:
    activate:
      on-profile: prod

  # Production Kafka
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    producer:
      acks: all
      retries: 10
      batch-size: 32768
      compression-type: snappy

  # Production Redis
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
    ssl: true

# Production Traccar
bridge:
  traccar:
    base-url: ${TRACCAR_API_URL}
    username: ${TRACCAR_USERNAME}
    password: ${TRACCAR_PASSWORD}
    timeout: 15s

  sync:
    enabled: true
    position-interval: 5s
    batch-size: 100
    max-parallel: 20

  cache:
    device-ttl: 300s

# Production Logging
logging:
  level:
    root: WARN
    com.fleetmanagement.bridgeservice: INFO
  file:
    name: /var/log/bridge-service/application.log

---

# ===== application-test.yml =====
spring:
  config:
    activate:
      on-profile: test

  # Test Kafka (Embedded)
  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}

  # Test Redis (Embedded)
  redis:
    host: localhost
    port: 6370  # Different port for tests

# Test Traccar (Mock)
bridge:
  traccar:
    base-url: http://localhost:8083  # Mock server
    username: test
    password: test

  sync:
    enabled: false  # Disable auto-sync in tests

  cache:
    device-ttl: 60s

# Test Logging
logging:
  level:
    root: WARN
    com.fleetmanagement.bridgeservice: DEBUG